(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{"/rf6":function(e,t,r){"use strict";function n(e,t,r){void 0===r&&(r={});var n={type:"Feature"};return(0===r.id||r.id)&&(n.id=r.id),r.bbox&&(n.bbox=r.bbox),n.properties=t||{},n.geometry=e,n}function o(e,t,r){return void 0===r&&(r={}),n({type:"Point",coordinates:e},t,r)}function i(e,t,r){void 0===r&&(r={});for(var o=0,i=e;o<i.length;o++){var a=i[o];if(a.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var l=0;l<a[a.length-1].length;l++)if(a[a.length-1][l]!==a[0][l])throw new Error("First and last Position are not equivalent.")}return n({type:"Polygon",coordinates:e},t,r)}function a(e,t,r){if(void 0===r&&(r={}),e.length<2)throw new Error("coordinates must be an array of two or more positions");return n({type:"LineString",coordinates:e},t,r)}function l(e,t){void 0===t&&(t={});var r={type:"FeatureCollection"};return t.id&&(r.id=t.id),t.bbox&&(r.bbox=t.bbox),r.features=e,r}function s(e,t,r){return void 0===r&&(r={}),n({type:"MultiLineString",coordinates:e},t,r)}function u(e,t,r){return void 0===r&&(r={}),n({type:"MultiPoint",coordinates:e},t,r)}function c(e,t,r){return void 0===r&&(r={}),n({type:"MultiPolygon",coordinates:e},t,r)}function d(e,r){void 0===r&&(r="kilometers");var n=t.factors[r];if(!n)throw new Error(r+" units is invalid");return e*n}function p(e,r){void 0===r&&(r="kilometers");var n=t.factors[r];if(!n)throw new Error(r+" units is invalid");return e/n}function f(e){return 180*(e%(2*Math.PI))/Math.PI}function m(e){return!isNaN(e)&&null!==e&&!Array.isArray(e)&&!/^\s*$/.test(e)}r("V+eJ"),r("8+KV"),r("LK8F"),r("bWfx"),r("HAE/"),Object.defineProperty(t,"__esModule",{value:!0}),t.earthRadius=6371008.8,t.factors={centimeters:100*t.earthRadius,centimetres:100*t.earthRadius,degrees:t.earthRadius/111325,feet:3.28084*t.earthRadius,inches:39.37*t.earthRadius,kilometers:t.earthRadius/1e3,kilometres:t.earthRadius/1e3,meters:t.earthRadius,metres:t.earthRadius,miles:t.earthRadius/1609.344,millimeters:1e3*t.earthRadius,millimetres:1e3*t.earthRadius,nauticalmiles:t.earthRadius/1852,radians:1,yards:t.earthRadius/1.0936},t.unitsFactors={centimeters:100,centimetres:100,degrees:1/111325,feet:3.28084,inches:39.37,kilometers:.001,kilometres:.001,meters:1,metres:1,miles:1/1609.344,millimeters:1e3,millimetres:1e3,nauticalmiles:1/1852,radians:1/t.earthRadius,yards:1/1.0936},t.areaFactors={acres:247105e-9,centimeters:1e4,centimetres:1e4,feet:10.763910417,inches:1550.003100006,kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,miles:386e-9,millimeters:1e6,millimetres:1e6,yards:1.195990046},t.feature=n,t.geometry=function(e,t,r){switch(void 0===r&&(r={}),e){case"Point":return o(t).geometry;case"LineString":return a(t).geometry;case"Polygon":return i(t).geometry;case"MultiPoint":return u(t).geometry;case"MultiLineString":return s(t).geometry;case"MultiPolygon":return c(t).geometry;default:throw new Error(e+" is invalid")}},t.point=o,t.points=function(e,t,r){return void 0===r&&(r={}),l(e.map((function(e){return o(e,t)})),r)},t.polygon=i,t.polygons=function(e,t,r){return void 0===r&&(r={}),l(e.map((function(e){return i(e,t)})),r)},t.lineString=a,t.lineStrings=function(e,t,r){return void 0===r&&(r={}),l(e.map((function(e){return a(e,t)})),r)},t.featureCollection=l,t.multiLineString=s,t.multiPoint=u,t.multiPolygon=c,t.geometryCollection=function(e,t,r){return void 0===r&&(r={}),n({type:"GeometryCollection",geometries:e},t,r)},t.round=function(e,t){if(void 0===t&&(t=0),t&&!(t>=0))throw new Error("precision must be a positive number");var r=Math.pow(10,t||0);return Math.round(e*r)/r},t.radiansToLength=d,t.lengthToRadians=p,t.lengthToDegrees=function(e,t){return f(p(e,t))},t.bearingToAzimuth=function(e){var t=e%360;return t<0&&(t+=360),t},t.radiansToDegrees=f,t.degreesToRadians=function(e){return e%360*Math.PI/180},t.convertLength=function(e,t,r){if(void 0===t&&(t="kilometers"),void 0===r&&(r="kilometers"),!(e>=0))throw new Error("length must be a positive number");return d(p(e,t),r)},t.convertArea=function(e,r,n){if(void 0===r&&(r="meters"),void 0===n&&(n="kilometers"),!(e>=0))throw new Error("area must be a positive number");var o=t.areaFactors[r];if(!o)throw new Error("invalid original units");var i=t.areaFactors[n];if(!i)throw new Error("invalid final units");return e/o*i},t.isNumber=m,t.isObject=function(e){return!!e&&e.constructor===Object},t.validateBBox=function(e){if(!e)throw new Error("bbox is required");if(!Array.isArray(e))throw new Error("bbox must be an Array");if(4!==e.length&&6!==e.length)throw new Error("bbox must be an Array of 4 or 6 numbers");e.forEach((function(e){if(!m(e))throw new Error("bbox must only contain numbers")}))},t.validateId=function(e){if(!e)throw new Error("id is required");if(-1===["string","number"].indexOf(typeof e))throw new Error("id must be a number or a string")},t.radians2degrees=function(){throw new Error("method has been renamed to `radiansToDegrees`")},t.degrees2radians=function(){throw new Error("method has been renamed to `degreesToRadians`")},t.distanceToDegrees=function(){throw new Error("method has been renamed to `lengthToDegrees`")},t.distanceToRadians=function(){throw new Error("method has been renamed to `lengthToRadians`")},t.radiansToDistance=function(){throw new Error("method has been renamed to `radiansToLength`")},t.bearingToAngle=function(){throw new Error("method has been renamed to `bearingToAzimuth`")},t.convertDistance=function(){throw new Error("method has been renamed to `convertLength`")}},"1jwa":function(e,t,r){"use strict";r.r(t);r("91GP");var n=r("mXGw"),o=r.n(n),i=r("xARA"),a=r("+qjn"),l=r("QJ+7"),s=r.n(l);var u=function(e){var t,r;function n(){return e.apply(this,arguments)||this}return r=e,(t=n).prototype=Object.create(r.prototype),t.prototype.constructor=t,t.__proto__=r,n.prototype.render=function(){return o.a.createElement("div",{className:"control-panel"},o.a.createElement("h3",null,"Zoom to Bounding Box"),o.a.createElement("p",null,"Click on a San Fransisco Neighborhood to zoom in."),o.a.createElement("div",{className:"source-link"},o.a.createElement("a",{href:"https://github.com/uber/react-map-gl/tree/5.2-release/examples/zoom-to-bounds",target:"_new"},"View Code â†—")))},n}(n.PureComponent),c=r("fjjH"),d=Object.assign({},c,{sources:Object.assign({},c.sources),layers:c.layers.slice()});d.sources["sf-neighborhoods"]={type:"geojson",data:"https://raw.githubusercontent.com/uber/react-map-gl/master/examples/.data/feature-example-sf.json"},d.layers.push({id:"sf-neighborhoods-fill",source:"sf-neighborhoods",type:"fill",paint:{"fill-outline-color":"#0040c8","fill-color":"#fff","fill-opacity":0}},{id:"sf-neighborhoods-outline",source:"sf-neighborhoods",type:"line",paint:{"line-width":2,"line-color":"#0080ef"}});var p=d;r.d(t,"default",(function(){return f})),r.d(t,"renderToDom",(function(){return m}));var f=function(e){var t,r;function n(t){var r;return(r=e.call(this,t)||this)._updateViewport=function(e){r.setState({viewport:e})},r._onClick=function(e){var t=e.features[0];if(t){var n=s()(t),o=n[0],i=n[1],l=n[2],u=n[3],c=new a.WebMercatorViewport(r.state.viewport).fitBounds([[o,i],[l,u]],{padding:40}),d=c.longitude,p=c.latitude,f=c.zoom;r.setState({viewport:Object.assign({},r.state.viewport,{longitude:d,latitude:p,zoom:f,transitionInterpolator:new a.LinearInterpolator({around:[e.offsetCenter.x,e.offsetCenter.y]}),transitionDuration:1e3})})}},r.state={viewport:{latitude:37.785164,longitude:-122.4,zoom:11,bearing:0,pitch:0},popupInfo:null},r._map=o.a.createRef(),r}return r=e,(t=n).prototype=Object.create(r.prototype),t.prototype.constructor=t,t.__proto__=r,n.prototype.render=function(){var e=this.state.viewport;return o.a.createElement(a.default,Object.assign({ref:this._map,mapStyle:p,interactiveLayerIds:["sf-neighborhoods-fill"]},e,{width:"100%",height:"100%",onClick:this._onClick,onViewportChange:this._updateViewport,mapboxApiAccessToken:""}),o.a.createElement(u,{containerComponent:this.props.containerComponent}))},n}(n.Component);function m(e){Object(i.render)(o.a.createElement(f,null),e)}},"QJ+7":function(e,t,r){"use strict";r("HAE/"),Object.defineProperty(t,"__esModule",{value:!0});var n=r("cWyK");t.default=function(e){var t=[1/0,1/0,-1/0,-1/0];return n.coordEach(e,(function(e){t[0]>e[0]&&(t[0]=e[0]),t[1]>e[1]&&(t[1]=e[1]),t[2]<e[0]&&(t[2]=e[0]),t[3]<e[1]&&(t[3]=e[1])})),t}},cWyK:function(e,t,r){"use strict";r("HAE/"),Object.defineProperty(t,"__esModule",{value:!0});var n=r("/rf6");function o(e,t,r){if(null!==e)for(var n,i,a,l,s,u,c,d,p=0,f=0,m=e.type,y="FeatureCollection"===m,g="Feature"===m,h=y?e.features.length:1,b=0;b<h;b++){s=(d=!!(c=y?e.features[b].geometry:g?e.geometry:e)&&"GeometryCollection"===c.type)?c.geometries.length:1;for(var v=0;v<s;v++){var w=0,x=0;if(null!==(l=d?c.geometries[v]:c)){u=l.coordinates;var k=l.type;switch(p=!r||"Polygon"!==k&&"MultiPolygon"!==k?0:1,k){case null:break;case"Point":if(!1===t(u,f,b,w,x))return!1;f++,w++;break;case"LineString":case"MultiPoint":for(n=0;n<u.length;n++){if(!1===t(u[n],f,b,w,x))return!1;f++,"MultiPoint"===k&&w++}"LineString"===k&&w++;break;case"Polygon":case"MultiLineString":for(n=0;n<u.length;n++){for(i=0;i<u[n].length-p;i++){if(!1===t(u[n][i],f,b,w,x))return!1;f++}"MultiLineString"===k&&w++,"Polygon"===k&&x++}"Polygon"===k&&w++;break;case"MultiPolygon":for(n=0;n<u.length;n++){for(x=0,i=0;i<u[n].length;i++){for(a=0;a<u[n][i].length-p;a++){if(!1===t(u[n][i][a],f,b,w,x))return!1;f++}x++}w++}break;case"GeometryCollection":for(n=0;n<l.geometries.length;n++)if(!1===o(l.geometries[n],t,r))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function i(e,t){var r;switch(e.type){case"FeatureCollection":for(r=0;r<e.features.length&&!1!==t(e.features[r].properties,r);r++);break;case"Feature":t(e.properties,0)}}function a(e,t){if("Feature"===e.type)t(e,0);else if("FeatureCollection"===e.type)for(var r=0;r<e.features.length&&!1!==t(e.features[r],r);r++);}function l(e,t){var r,n,o,i,a,l,s,u,c,d,p=0,f="FeatureCollection"===e.type,m="Feature"===e.type,y=f?e.features.length:1;for(r=0;r<y;r++){for(l=f?e.features[r].geometry:m?e.geometry:e,u=f?e.features[r].properties:m?e.properties:{},c=f?e.features[r].bbox:m?e.bbox:void 0,d=f?e.features[r].id:m?e.id:void 0,a=(s=!!l&&"GeometryCollection"===l.type)?l.geometries.length:1,o=0;o<a;o++)if(null!==(i=s?l.geometries[o]:l))switch(i.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":if(!1===t(i,p,u,c,d))return!1;break;case"GeometryCollection":for(n=0;n<i.geometries.length;n++)if(!1===t(i.geometries[n],p,u,c,d))return!1;break;default:throw new Error("Unknown Geometry Type")}else if(!1===t(null,p,u,c,d))return!1;p++}}function s(e,t){l(e,(function(e,r,o,i,a){var l,s=null===e?null:e.type;switch(s){case null:case"Point":case"LineString":case"Polygon":return!1!==t(n.feature(e,o,{bbox:i,id:a}),r,0)&&void 0}switch(s){case"MultiPoint":l="Point";break;case"MultiLineString":l="LineString";break;case"MultiPolygon":l="Polygon"}for(var u=0;u<e.coordinates.length;u++){var c={type:l,coordinates:e.coordinates[u]};if(!1===t(n.feature(c,o),r,u))return!1}}))}function u(e,t){s(e,(function(e,r,i){var a=0;if(e.geometry){var l=e.geometry.type;if("Point"!==l&&"MultiPoint"!==l){var s,u=0,c=0,d=0;return!1!==o(e,(function(o,l,p,f,m){if(void 0===s||r>u||f>c||m>d)return s=o,u=r,c=f,d=m,void(a=0);var y=n.lineString([s,o],e.properties);if(!1===t(y,r,i,m,a))return!1;a++,s=o}))&&void 0}}}))}function c(e,t){if(!e)throw new Error("geojson is required");s(e,(function(e,r,o){if(null!==e.geometry){var i=e.geometry.type,a=e.geometry.coordinates;switch(i){case"LineString":if(!1===t(e,r,o,0,0))return!1;break;case"Polygon":for(var l=0;l<a.length;l++)if(!1===t(n.lineString(a[l],e.properties),r,o,l))return!1}}}))}t.coordEach=o,t.coordReduce=function(e,t,r,n){var i=r;return o(e,(function(e,n,o,a,l){i=0===n&&void 0===r?e:t(i,e,n,o,a,l)}),n),i},t.propEach=i,t.propReduce=function(e,t,r){var n=r;return i(e,(function(e,o){n=0===o&&void 0===r?e:t(n,e,o)})),n},t.featureEach=a,t.featureReduce=function(e,t,r){var n=r;return a(e,(function(e,o){n=0===o&&void 0===r?e:t(n,e,o)})),n},t.coordAll=function(e){var t=[];return o(e,(function(e){t.push(e)})),t},t.geomEach=l,t.geomReduce=function(e,t,r){var n=r;return l(e,(function(e,o,i,a,l){n=0===o&&void 0===r?e:t(n,e,o,i,a,l)})),n},t.flattenEach=s,t.flattenReduce=function(e,t,r){var n=r;return s(e,(function(e,o,i){n=0===o&&0===i&&void 0===r?e:t(n,e,o,i)})),n},t.segmentEach=u,t.segmentReduce=function(e,t,r){var n=r,o=!1;return u(e,(function(e,i,a,l,s){n=!1===o&&void 0===r?e:t(n,e,i,a,l,s),o=!0})),n},t.lineEach=c,t.lineReduce=function(e,t,r){var n=r;return c(e,(function(e,o,i,a){n=0===o&&void 0===r?e:t(n,e,o,i,a)})),n},t.findSegment=function(e,t){if(t=t||{},!n.isObject(t))throw new Error("options is invalid");var r,o=t.featureIndex||0,i=t.multiFeatureIndex||0,a=t.geometryIndex||0,l=t.segmentIndex||0,s=t.properties;switch(e.type){case"FeatureCollection":o<0&&(o=e.features.length+o),s=s||e.features[o].properties,r=e.features[o].geometry;break;case"Feature":s=s||e.properties,r=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":r=e;break;default:throw new Error("geojson is invalid")}if(null===r)return null;var u=r.coordinates;switch(r.type){case"Point":case"MultiPoint":return null;case"LineString":return l<0&&(l=u.length+l-1),n.lineString([u[l],u[l+1]],s,t);case"Polygon":return a<0&&(a=u.length+a),l<0&&(l=u[a].length+l-1),n.lineString([u[a][l],u[a][l+1]],s,t);case"MultiLineString":return i<0&&(i=u.length+i),l<0&&(l=u[i].length+l-1),n.lineString([u[i][l],u[i][l+1]],s,t);case"MultiPolygon":return i<0&&(i=u.length+i),a<0&&(a=u[i].length+a),l<0&&(l=u[i][a].length-l-1),n.lineString([u[i][a][l],u[i][a][l+1]],s,t)}throw new Error("geojson is invalid")},t.findPoint=function(e,t){if(t=t||{},!n.isObject(t))throw new Error("options is invalid");var r,o=t.featureIndex||0,i=t.multiFeatureIndex||0,a=t.geometryIndex||0,l=t.coordIndex||0,s=t.properties;switch(e.type){case"FeatureCollection":o<0&&(o=e.features.length+o),s=s||e.features[o].properties,r=e.features[o].geometry;break;case"Feature":s=s||e.properties,r=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":r=e;break;default:throw new Error("geojson is invalid")}if(null===r)return null;var u=r.coordinates;switch(r.type){case"Point":return n.point(u,s,t);case"MultiPoint":return i<0&&(i=u.length+i),n.point(u[i],s,t);case"LineString":return l<0&&(l=u.length+l),n.point(u[l],s,t);case"Polygon":return a<0&&(a=u.length+a),l<0&&(l=u[a].length+l),n.point(u[a][l],s,t);case"MultiLineString":return i<0&&(i=u.length+i),l<0&&(l=u[i].length+l),n.point(u[i][l],s,t);case"MultiPolygon":return i<0&&(i=u.length+i),a<0&&(a=u[i].length+a),l<0&&(l=u[i][a].length-l),n.point(u[i][a][l],s,t)}throw new Error("geojson is invalid")}},fjjH:function(e){e.exports=JSON.parse('{"version":8,"name":"Basic","metadata":{"mapbox:autocomposite":true},"sources":{"mapbox":{"url":"mapbox://mapbox.mapbox-streets-v7","type":"vector"}},"sprite":"mapbox://sprites/mapbox/basic-v8","glyphs":"mapbox://fonts/mapbox/{fontstack}/{range}.pbf","layers":[{"id":"background","type":"background","paint":{"background-color":"#dedede"},"interactive":true},{"id":"landuse_overlay_national_park","type":"fill","source":"mapbox","source-layer":"landuse_overlay","filter":["==","class","national_park"],"paint":{"fill-color":"#d2edae","fill-opacity":0.75},"interactive":true},{"id":"landuse_park","type":"fill","source":"mapbox","source-layer":"landuse","filter":["==","class","park"],"paint":{"fill-color":"#d2edae"},"interactive":true},{"id":"waterway","type":"line","source":"mapbox","source-layer":"waterway","filter":["all",["==","$type","LineString"],["in","class","river","canal"]],"paint":{"line-color":"#a0cfdf","line-width":{"base":1.4,"stops":[[8,0.5],[20,15]]}},"interactive":true},{"id":"water","type":"fill","source":"mapbox","source-layer":"water","paint":{"fill-color":"#a0cfdf"},"interactive":true},{"id":"building","type":"fill","source":"mapbox","source-layer":"building","paint":{"fill-color":"#d6d6d6"},"interactive":true},{"interactive":true,"layout":{"line-cap":"butt","line-join":"miter"},"filter":["all",["==","$type","LineString"],["all",["in","class","motorway_link","street","street_limited","service","track","pedestrian","path","link"],["==","structure","tunnel"]]],"type":"line","source":"mapbox","id":"tunnel_minor","paint":{"line-color":"#efefef","line-width":{"base":1.55,"stops":[[4,0.25],[20,30]]},"line-dasharray":[0.36,0.18]},"source-layer":"road"},{"interactive":true,"layout":{"line-cap":"butt","line-join":"miter"},"filter":["all",["==","$type","LineString"],["all",["in","class","motorway","primary","secondary","tertiary","trunk"],["==","structure","tunnel"]]],"type":"line","source":"mapbox","id":"tunnel_major","paint":{"line-color":"#fff","line-width":{"base":1.4,"stops":[[6,0.5],[20,30]]},"line-dasharray":[0.28,0.14]},"source-layer":"road"},{"interactive":true,"layout":{"line-cap":"round","line-join":"round"},"filter":["all",["==","$type","LineString"],["all",["in","class","motorway_link","street","street_limited","service","track","pedestrian","path","link"],["in","structure","none","ford"]]],"type":"line","source":"mapbox","id":"road_minor","paint":{"line-color":"#efefef","line-width":{"base":1.55,"stops":[[4,0.25],[20,30]]}},"source-layer":"road"},{"interactive":true,"layout":{"line-cap":"round","line-join":"round"},"filter":["all",["==","$type","LineString"],["all",["in","class","motorway","primary","secondary","tertiary","trunk"],["in","structure","none","ford"]]],"type":"line","source":"mapbox","id":"road_major","paint":{"line-color":"#fff","line-width":{"base":1.4,"stops":[[6,0.5],[20,30]]}},"source-layer":"road"},{"interactive":true,"layout":{"line-cap":"butt","line-join":"miter"},"filter":["all",["==","$type","LineString"],["all",["in","class","motorway_link","street","street_limited","service","track","pedestrian","path","link"],["==","structure","bridge"]]],"type":"line","source":"mapbox","id":"bridge_minor case","paint":{"line-color":"#dedede","line-width":{"base":1.6,"stops":[[12,0.5],[20,10]]},"line-gap-width":{"base":1.55,"stops":[[4,0.25],[20,30]]}},"source-layer":"road"},{"interactive":true,"layout":{"line-cap":"butt","line-join":"miter"},"filter":["all",["==","$type","LineString"],["all",["in","class","motorway","primary","secondary","tertiary","trunk"],["==","structure","bridge"]]],"type":"line","source":"mapbox","id":"bridge_major case","paint":{"line-color":"#dedede","line-width":{"base":1.6,"stops":[[12,0.5],[20,10]]},"line-gap-width":{"base":1.55,"stops":[[4,0.25],[20,30]]}},"source-layer":"road"},{"interactive":true,"layout":{"line-cap":"round","line-join":"round"},"filter":["all",["==","$type","LineString"],["all",["in","class","motorway_link","street","street_limited","service","track","pedestrian","path","link"],["==","structure","bridge"]]],"type":"line","source":"mapbox","id":"bridge_minor","paint":{"line-color":"#efefef","line-width":{"base":1.55,"stops":[[4,0.25],[20,30]]}},"source-layer":"road"},{"interactive":true,"layout":{"line-cap":"round","line-join":"round"},"filter":["all",["==","$type","LineString"],["all",["in","class","motorway","primary","secondary","tertiary","trunk"],["==","structure","bridge"]]],"type":"line","source":"mapbox","id":"bridge_major","paint":{"line-color":"#fff","line-width":{"base":1.4,"stops":[[6,0.5],[20,30]]}},"source-layer":"road"},{"interactive":true,"layout":{"line-cap":"round","line-join":"round"},"filter":["all",["==","$type","LineString"],["all",["<=","admin_level",2],["==","maritime",0]]],"type":"line","source":"mapbox","id":"admin_country","paint":{"line-color":"#8b8a8a","line-width":{"base":1.3,"stops":[[3,0.5],[22,15]]}},"source-layer":"admin"},{"interactive":true,"minzoom":5,"layout":{"icon-image":"{maki}-11","text-offset":[0,0.5],"text-field":"{name_en}","text-font":["Open Sans Semibold","Arial Unicode MS Bold"],"text-max-width":8,"text-anchor":"top","text-size":11,"icon-size":1},"filter":["all",["==","$type","Point"],["all",["==","scalerank",1],["==","localrank",1]]],"type":"symbol","source":"mapbox","id":"poi_label","paint":{"text-color":"#666","text-halo-width":1,"text-halo-color":"rgba(255,255,255,0.75)","text-halo-blur":1},"source-layer":"poi_label"},{"interactive":true,"layout":{"symbol-placement":"line","text-field":"{name_en}","text-font":["Open Sans Semibold","Arial Unicode MS Bold"],"text-transform":"uppercase","text-letter-spacing":0.1,"text-size":{"base":1.4,"stops":[[10,8],[20,14]]}},"filter":["all",["==","$type","LineString"],["in","class","motorway","primary","secondary","tertiary","trunk"]],"type":"symbol","source":"mapbox","id":"road_major_label","paint":{"text-color":"#666","text-halo-color":"rgba(255,255,255,0.75)","text-halo-width":2},"source-layer":"road_label"},{"interactive":true,"minzoom":8,"layout":{"text-field":"{name_en}","text-font":["Open Sans Semibold","Arial Unicode MS Bold"],"text-max-width":6,"text-size":{"stops":[[6,12],[12,16]]}},"filter":["all",["==","$type","Point"],["in","type","town","village","hamlet","suburb","neighbourhood","island"]],"type":"symbol","source":"mapbox","id":"place_label_other","paint":{"text-color":"#666","text-halo-color":"rgba(255,255,255,0.75)","text-halo-width":1,"text-halo-blur":1},"source-layer":"place_label"},{"interactive":true,"layout":{"text-field":"{name_en}","text-font":["Open Sans Bold","Arial Unicode MS Bold"],"text-max-width":10,"text-size":{"stops":[[3,12],[8,16]]}},"maxzoom":16,"filter":["all",["==","$type","Point"],["==","type","city"]],"type":"symbol","source":"mapbox","id":"place_label_city","paint":{"text-color":"#666","text-halo-color":"rgba(255,255,255,0.75)","text-halo-width":1,"text-halo-blur":1},"source-layer":"place_label"},{"interactive":true,"layout":{"text-field":"{name_en}","text-font":["Open Sans Regular","Arial Unicode MS Regular"],"text-max-width":10,"text-size":{"stops":[[3,14],[8,22]]}},"maxzoom":12,"filter":["==","$type","Point"],"type":"symbol","source":"mapbox","id":"country_label","paint":{"text-color":"#666","text-halo-color":"rgba(255,255,255,0.75)","text-halo-width":1,"text-halo-blur":1},"source-layer":"country_label"}]}')}}]);